# import Post from "./generated/prisma.graphql"

type Query {
	me: User
	# admin
	usersConnection(first: Int, skip: Int): UserConnection
	# job applications
	jobApplicationsConnection(first: Int, skip: Int): JobApplicationConnection
	jobApplication(id: ID!): JobApplication
	# client applications
	clientApplicationsConnection(first: Int, skip: Int): ClientApplicationConnection
	clientApplication(id: ID!): ClientApplication
	# coupons
	couponsConnection(first: Int, skip: Int): CouponConnection
	# public content
	feed(first: Int, skip: Int): PostConnection
	post(id: ID!): Post
	file(id: ID!): File
	variables: PublicVariables
	applicationSettings: ApplicationSetting
	coupon(coupon: String!): Coupon
}

type Mutation {
	# DASHBOARD
	# -----------
	# authorization
	login(username: String!, password: String!): AuthPayload!
	# posts
	publish(
		title: String!,
		body: String!,
		thumbnailBody: String!,
		thumbnailImageId: String,
		badge: String,
		badgeColorClass: String): Post!
	updatePost(
		id: ID!,
		title: String,
		body: String,
		badge: String,
		badgeColorClass: String,
		thumbnailBody: String,
		thumbnailImageId: String): Post
	deletePost(id: ID!): Post!
	# admin
	addUser(name: String!, username: String!, password: String!, permissions: [Permission!]!): AuthPayload!
	loginAs(id: ID!): AuthPayload!
	changeUserPermissions(id: ID!, permissions: [Permission!]!): User
	deleteUser(id: ID!): User
	# files
	createFileEntry(name: String!, checksum: String!): File!
	# coupons
	createCoupons(value: Int!, discountType: DiscountType!, repeat: Int): [Coupon!]!
	updateCoupon(id: ID!, value: Int, discountType: DiscountType): Coupon!
	deleteCoupon(id: ID!): Coupon!
	# variables
	updateApplicationSettings(
		light_postsPerMonth: Int!
		light_gifs: Int!
		light_videos: Int!
		light_photography: Int!
		pro_postsPerMonth: Int!
		pro_gifs: Int!
		pro_videos: Int!
		pro_photography: Int!
		enterprise_postsPerMonth: Int!
		enterprise_gifs: Int!
		enterprise_videos: Int!
		enterprise_photography: Int!
		post: Int!
		videoMinute: Int!
		photo: Int!
		gif: Int!
	): ApplicationSetting
	updateVariables(
		email: String
		phone1: String
		phone2: String
		address: String
		facebook: String
		instagram: String
		linkedIn: String
		youtube: String
		contactEmail: String
		clientsEmail: String
		jobsEmail: String
		additionalTitle: String
		additionalBody: String): Variable
	# PUBLIC
	# -----------
	# applications
	applyClient(
		name: String!
		email: String!,
		address: String,
		phoneNumber: String,
		facebook: String,
		postsPerMonth: Int!,
		photography: Int!,
		gifs: Int!,
		videos: Int!,
		videoMinutesCount: Int!,
		website: Boolean!,
		hasHost: Boolean!,
		hasDomain: Boolean!,
		dealMonths: Int!,
		# coupons
		coupon: String,
		# preserved even if prices change
		dealPackage: Package!,
		# needs to be calculated server side!!!!!
		totalPrice: Int!
		): ClientApplication!
	applyForWork(
		email: String!,
		address: String,
		phoneNumber: String,
		firstName: String,
		middleName: String,
		lastName: String,
		positions: [JobPosition!]!,
		resumeFileId: String!,
		linkedIn: String): JobApplication!
}

type AuthPayload {
	token: String!
	user: User!
}

type User {
	id: ID!
	username: String!
	permissions: [Permission!]!
	name: String!
	posts: [Post!]!
	lastLogin: DateTime
}

type File {
	id: String!
	name: String!
	checksum: String!
}

type PublicVariables {
	email: String
	phone1: String
	phone2: String
	address: String
	facebook: String
	instagram: String
	youtube: String
	linkedIn: String
	additionalTitle: String
	additionalBody: String
}